
// 배열 문제 #01-1

package com.ssafy;

public class Test {
	public static void main(String[] args) {
		
		int N = 6;
		
		int result1 = (int)(Math.random()*N) + 1;
		int result2 = (int)(Math.random()*N) + 1;
		int result3 = (int)(Math.random()*N) + 1;
		int result4 = (int)(Math.random()*N) + 1;
		int result5 = (int)(Math.random()*N) + 1;
		
		System.out.println(result1);
		System.out.println(result2);
		System.out.println(result3);
		System.out.println(result4);
		System.out.println(result5);

	}
}



// 배열 문제 #01-2

package com.ssafy;

public class Test {
	public static void main(String[] args) {

		int N = 6;
		
		int [] resultArray = new int[5];
		resultArray[0] = (int)(Math.random()*N) + 1;
		resultArray[1] = (int)(Math.random()*N) + 1;
		resultArray[2] = (int)(Math.random()*N) + 1;
		resultArray[3] = (int)(Math.random()*N) + 1;
		resultArray[4] = (int)(Math.random()*N) + 1;
		
		System.out.println(resultArray[0]);
		System.out.println(resultArray[1]);
		System.out.println(resultArray[2]);
		System.out.println(resultArray[3]);
		System.out.println(resultArray[4]);

	}
}

// 배열 문제 #01-3

package com.ssafy;

public class Test {
	public static void main(String[] args) {

		int N = 6;
		
		int [] resultArray = new int[5];

		for( int i=0; i<5; i++ ) {
			resultArray[i] = (int)(Math.random()*N) + 1;
		}
		
		for( int i=0; i<5; i++ ) {
			System.out.println(resultArray[i]);
		}
	}
}

// 배열 문제 #02-1
	
package com.ssafy;

public class Test {
	
	public static void main(String[] args) {

		String ssafyStr = "SSAFY";
		
		char[] ssafyArray = new char[ssafyStr.length()];
		
		for (int i = 0; i < ssafyArray.length; i++) {
			ssafyArray[i] = ssafyStr.charAt(i);
		}
		
		for (int i = 0; i < ssafyArray.length; i++) {
			System.out.print(ssafyArray[i]);
		}			
	}
}

// 배열 문제 #02-2
	
package com.ssafy;

public class Test {
	
	public static void main(String[] args) {

		String ssafyStr = "SSAFY";
		
		char[] ssafyArray = new char[ssafyStr.length()];
		
		for (int i = 0; i < ssafyArray.length; i++) {
			ssafyArray[i] = ssafyStr.charAt(i);
		}
		
		System.out.print(Arrays.toString(ssafyArray));		
	}
}	



// 배열 문제 #03

package com.ssafy;

public class Test {
	public static void main(String[] args) {
		// 1
		int [] intArray = new int[3];
		intArray[2] = 10;

		// 2
		char charArray[] = { 'S','S','A','F','Y' };
	
		// 3
		String [] strArray = { "S","S","A","F","Y" };
	
		// 4
		int[] intArray2;
		intArray2 = { 1, 2, 3, 4, 5 };
	}
}



// 배열 문제 #04-1

package com.ssafy;

public class Test {
	public static void main(String[] args) {

		int N = 6;
		
		int [] resultArray = new int[5];

		for( int i=0; i<resultArray.length; i++ ) {
			resultArray[i] = (int)(Math.random()*N) + 1;
		}
		
		for( int x : resultArray ) {
			System.out.println(x);
		}
	}
}

// 배열 문제 #04-2

package com.ssafy;

public class Test {
	public static void main(String[] args) {

		int N = 6;
		
		int [] resultArray = new int[5];

		for( int x : resultArray ) {
			x = (int)(Math.random()*N) + 1;
		}
		
		for( int x : resultArray ) {
			System.out.println(x);
		}
	}
}


// 배열 문제 #05

package com.ssafy;

public class Test {
	public static void main(String[] args) {
		
		String [] students = { "홍길동", "박사피", "윤멀티", "나오기" }; 

		for( String student : students ) {
			System.out.println(student);
		}
	}
}

// 배열 문제 #06

package com.ssafy;

public class Test {
	public static void main(String[] args) {
		
		String [] students = { "홍길동", "박사피", "윤멀티", "나오기" }; 

		for( String student : students ) {
			System.out.println(student);
		}
		
		String temp = students[1];
		students[1] = students[2];
		students[2] = temp;
		
		for( String student : students ) {
			System.out.println(student);
		}
	}
}

// 배열 문제 #07

package com.ssafy;

public class Test {
	public static void main(String[] args) {
		
		String [] students = { "홍길동", "박사피", "윤멀티", "나오기" }; 

		System.out.println(Arrays.toString(students));
		
		// #1
		students = { "홍길동", "박사피", "윤멀티", "나오기", "신자바" };
		
		// #2
		String [] students2 = { "홍길동", "박사피", "윤멀티", "나오기", "신자바" };
		
		
		// #3
		String [] students3 = new String[5];
		System.arraycopy(students, 0, students3, 0, 4);
		students3[4] = "신자바";

		// System.out.println(Arrays.toString(students2));
		// System.out.println(Arrays.toString(students3));
	}
}

// arraycopy

package com.ssafy;

import java.util.Arrays;

public class Test {

	public static void main(String[] args) {

		int[] srcArray = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
		int[] tgtArray = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
		
		System.arraycopy(srcArray, 2, tgtArray, 1, 3);
		
		System.out.println(Arrays.toString(tgtArray));
	}
}
	
	
	
	
// 배열 문제 #08-1

package com.ssafy;

public class Test {

	public static void main(String[] args) {

		int[] intArray = { 3, 27, 13, 8, 235, 7, 22, 9, 435, 31, 54 };
		
		int min = 999;	// 충분히 큰 수
		int max = 0;	// 충분히 작은 수
		
		for (int i = 0; i < intArray.length; i++) {
			if( intArray[i] < min ) {
				min = intArray[i];
			}
			if( intArray[i] > max ) {
				max = intArray[i];
			}
		}
		
		System.out.println("Min : " + min + " Max : " + max);			
	}

}

// 배열 문제 #08-2

	package com.ssafy;

	public class Test {
	
		public static void main(String[] args) {

			int[] intArray = { 3, 27, 13, 8, 235, 7, 22, 9, 435, 31, 54 };
			
			int min = Integer.MAX_VALUE;
			int max = Integer.MIN_VALUE;
			
			for (int i = 0; i < intArray.length; i++) {
				min = Math.min(min, intArray[i]);
				max = Math.max(max, intArray[i]);
			}
			
			System.out.println("Min : " + min + " Max : " + max);			
	    }

	}


// 배열 문제 #09

package com.ssafy;

import java.util.Arrays;

public class Test {

	public static void main(String[] args) {

		int[] intArray = { 3, 7, 2, 5, 7, 7, 9, 2, 8, 1, 1, 5, 3 };
		int[] used = new int[10];

		for (int i = 0; i < intArray.length; i++) {
			used[intArray[i]]++;
		}
		
		System.out.println(Arrays.toString(used));			
	}

}


// 배열 문제 #10

package com.ssafy;

public class Test {

	public static void main(String[] args) {

		int[] intArray = { 
			1, 3, 4, 7, 8, 10, 12, 15, 16, 17, 18 
		};
		
		int[] used = new int[21];	// 0 : dummy

		for (int i = 0; i < intArray.length; i++) {
			used[intArray[i]]++;
		}
		
		for (int i = 1; i < used.length; i++) {
			if( used[i] == 0 ) {
				System.out.print(i + " ");
			}
		}			
	}

}

---------------------------------------------------------

// 배열 문제 #11 

package com.ssafy;

public class Test {
	public static void main(String[] args) {
		
		char[][] grid = new char[4][3];
		
		grid[0][0] = 'C'; grid[0][1] = 'A'; grid[0][2] = 'A';
		grid[1][0] = 'C'; grid[1][1] = 'C'; grid[1][2] = 'B';
		grid[2][0] = 'B'; grid[2][1] = 'A'; grid[2][2] = 'C';
		grid[3][0] = 'C'; grid[3][1] = 'C'; grid[3][2] = 'C';
		
		for( int i=0; i<grid.length; i++ ) {
			for( int j=0; j<grid[i].length; j++ ) {
				System.out.print(grid[i][j]);
			}
			System.out.println();
		}
	}
}

// 배열 문제 #12 

package com.ssafy;

public class Test {

	public static void main(String[] args) {

		int  intArray[][] = new int [4][3];
		int [] intArray2[] = new int [4][3];
		int [][] intArray3 = new int [4][3];
		int [][] intArray4 = new int [4]{1,2,3};	
		int [][] intArray5 = new int[][] {{1,2,3},{1,2,3},{1,2,3},{1,2,3}};
	}

}

// 배열 문제 #13

package com.ssafy;

public class Test {
	public static void main(String[] args) {
		
		int[][] grid = {
				{2, 3, 1, 4, 7},
				{8,13, 3,33, 1},
				{7, 4, 5,80,12},
				{17,9,11, 5, 4},
				{4, 5,91,27, 7}
		};
		
		int count = 0;
		int sum = 0;
		
		for( int i=0; i<grid.length; i++ ) {
			for( int j=0; j<grid[i].length; j++ ) {
				if( grid[i][j] % 3 == 0 ) {
					count++;
					sum += grid[i][j];
				}
			}
		}
		
		System.out.println(count);
		System.out.println(sum);
	}
}


// 배열 문제 #14

2 3 1 4
1 X 3 2
3 4 X X
X 4 1 5

package com.ssafy;

import java.util.Scanner;

public class Test {
	
	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		char[][] grid = new char[4][4];

		for( int i=0; i<4; i++ )
			for( int j=0; j<4; j++ )
				grid[i][j] = sc.next().charAt(0);

		for( int i=0; i<4; i++ ) {
			for( int j=0; j<4; j++ ) {
				System.out.print(grid[i][j]);
			}
			System.out.println();
		}
		sc.close();
	}
}



// 배열 문제 #15

2 3 1 4
1 X 3 2
3 4 X X
X 4 1 5

package com.ssafy;

import java.util.Scanner;

public class Test {
	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		char[][] grid = new char[4][4];
		
		int sum = 0;
		
		for( int i=0; i<4; i++ )
			for( int j=0; j<4; j++ )
				grid[i][j] = sc.next().charAt(0);

		for( int i=0; i<4; i++ )
			for( int j=0; j<4; j++ )
				if( grid[i][j] == 'X') {
					if( j-1 >= 0 && grid[i][j-1] != 'X' ) sum += grid[i][j-1] - '0';
					if( j+1 <  4 && grid[i][j+1] != 'X' ) sum += grid[i][j+1] - '0';
				}
		
		System.out.println(sum);
		sc.close();
	}
}

// 배열 문제 #16

2 3 1 4
1 X 3 2
3 4 X X
X 4 1 5
	
package com.ssafy;

import java.util.Scanner;

public class Test {

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		char[][] grid = new char[4][4];
		boolean[][] used = new boolean[4][4];
		
		int sum = 0;
		
		for( int i=0; i<4; i++ )
			for( int j=0; j<4; j++ )
				grid[i][j] = sc.next().charAt(0);

		for( int i=0; i<4; i++ )
			for( int j=0; j<4; j++ )
				if( grid[i][j] == 'X') {
					if( i-1 >= 0 && grid[i-1][j] != 'X' && ! used[i-1][j] ) { 
						sum += grid[i-1][j] - '0';
						used[i-1][j] = true;
					}
					if( i+1 < 4 && grid[i+1][j] != 'X' && ! used[i+1][j] ) { 
						sum += grid[i+1][j] - '0';
						used[i+1][j] = true;
					}
					if( j-1 >= 0 && grid[i][j-1] != 'X' && ! used[i][j-1] ) { 
						sum += grid[i][j-1] - '0';
						used[i][j-1] = true;
					}
					if( j+1 < 4 && grid[i][j+1] != 'X' && ! used[i][j+1] ) { 
						sum += grid[i][j+1] - '0';
						used[i][j+1] = true;
					}
				}
		
		System.out.println(sum);
		sc.close();
	}
}
